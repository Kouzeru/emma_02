<html>
<title>Program configuration</title>
<body>
<h1>Program configuration</h1>
<p>
For every computer a default program configuration is defined. For most computers this is the first available 1, 2 or 4K of RAM. For the Studio clones it is the cart area and for the Cidelsa the game ROM.
</p>
<p>
To be able to save the 'debug' or 'type' information, i.e. the information defining what locations are 1802 code, data and possibly Chip 8 or ST2 code, a program configuration needs to be defined. The same goes for using the 'Insert', 'Delete' and 'Branch location' features, see chapters 'Insert / Delete' and 'Branch location'.
</p>
<p>
The program configurations define:
<UL>
<LI>Program name
<LI>Program directory
<LI>Code start
<LI>Code end
<LI>(Program) end, default equal to Code end.
<LI>S/P (COMX: Slot code, ELF: EMS Page)
</UL>
</p>
<p>
For example:
<br>Name: test.bin
<br>Code start: 8000
<br>Code end: 80FF
<br>(Program) end: 81FF
</p>
<p>
This will define a code area of hex 8000-80FF and a data area between hex 8100-81FF. After this configuration is defined a 'Save' will store a binary file 'test.bin' of memory locations hex 8000-81FF as well as save 'type' information a file test.debug. When 'Save' is pressed a configuration file name is also requested which will save all configuration data like program name, directory, code start etc. 
</p>
<p>
It is recommended to keep all data either at the start of the code area; or after in the data area between 'Code end' and '(Program) end'. Data can also be used mixed in with code as long as the 'LVL' macro is used to load the data address (see also chapter 'LDL, LDV and RLDL instructions'). If no data is needed in the pure data area 'Code end' and '(Program) end' can be equal.
</p>
<p>
To add a program to a configuration press 'New'. After filling in program name, code start, code end and program end press 'Store'. When starting a new configuration there is no need to press 'New'. An existing configuration can be loaded by pressing 'Load' and then the .config file name. Pressing the up or down buttons will step thru the defined configurations if more than 1 is defined.
</p>
<p>
To automatically save the defined programs as well as the .config file, select 'Save on exit'. If no configuration file has been specified a default file debug.config will be saved.
</p>
<p>
All areas defined as code will show the address locations in black, other areas will show the address in grey. 
</p>
<p>
Multiple program areas can be defined in one configuration. E.g. loading the SB configuration (press SB button on a COMX with SB active) will load 12 program areas! 
</p>
The COMX Slot code should be defined as the COMX out 1 definition:
b0: 0=Select ROM bank, 1=Select RAM bank
b1: Select slot 1
b2: Select slot 2
b3: Select slot 3
b4: Select slot 4
b5-b7: bank number 0 to 8
<p>
Bits 0 and 5 to 7 are only used in combination with the SB FW.
</p>
<p>
The Elf EMS Page is the page number 0 to 1F.
</p>
<p>
Note that any configuration range in a COMX Slot should always be between hex C000 and hex DFFF and the ELf Page between hex 8000 and hex BFFF.
</p>
<h2>Program configuration Number</h2>
<p>
After every 'Save' of a program configuration all binary and debug files are backed up by putting a numbered extension after the file name. Starting with 1 and counting up.
</p>
<p>
The Direct Assemble can load any of these configurations back by filling in a 'number' in the 'Configuration number' field (right after the file name field. So to load back the oldest back-up configuration fill in '1', to load back the latest fill inthe latest number you can find in thr folder where all configurations are saved.
</p>
<p>
Note ALL files will be loaded with the same configuration extension. 
</p>
</body>
</html>